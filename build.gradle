plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'java'
    id "com.moowork.node" version "1.2.0"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "com.moowork.node"

group = 'com.liamcarr'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

node {
    download = true
    version = "8.11.3"

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory for NPM
    npmWorkDir = file("${project.buildDir}/npm")
}

task appNpmInstall(type: NpmTask) {
    description = "Installs all dependencies from package.json"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["install"]
}

task appNpmBuild(type: NpmTask) {
    description = "Builds production version of the webapp"
    workingDir = file("${project.projectDir}/src/main/webapp")
    args = ["run", "build"]
}

task appNpmTest(type: NpmTask) {
    description = "Runs the automated test cases for webapp"
    environment = ['CI': 'true']
    args = ['run', 'test']
}

task copyWebApp(type: Copy) {
    from 'src/main/webapp/build'
    into 'build/resources/main/static/.'
}


// This tells grade in what order to perform the previous tasks
appNpmBuild.dependsOn appNpmInstall
appNpmTest.dependsOn appNpmBuild
copyWebApp.dependsOn appNpmBuild
compileJava.dependsOn copyWebApp


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.postgresql', name: 'postgresql', version: '42.2.6'


    // Development Only
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
//    developmentOnly 'com.h2database:h2:1.4.199'


    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'com.h2database:h2:1.4.199'
}
